[{"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\jobs\\briefApps.js":"1","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\index.js":"2","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\context\\PagesContext.js":"3","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\Skills.js":"4","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\Contact.js":"5","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\data\\pagesURL.js":"6","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\Home.js":"7","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\Jobs.js":"8","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\Navbar.js":"9","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\GlitchText.js":"10","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\BlurryText.js":"11","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\About.js":"12","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\hooks\\useWindowSize.js":"13","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\PagesSelector.js":"14","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\jobs\\AppDetails.js":"15","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\Waiter.js":"16","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\AnimatedText.js":"17","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\IconsCard.js":"18","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\data\\pageColors.js":"19","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\TextCarousel.js":"20","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\Bubbles.js":"21","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\MenuIcon.js":"22","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\socialIcons.js":"23","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\Certificades.js":"24","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\certificados.js":"25","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\toolIcons.js":"26","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\ImageGrid.js":"27","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\ImageFollowingText.js":"28","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\AppCard.js":"29","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\reportWebVitals.js":"30","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\jobs\\Designs.js":"31","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\HOC\\withScrollable.js":"32","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\jobs\\apps.js":"33","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\SkillCard.js":"34","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\design_imgs.js":"35","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\videos.js":"36","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\hooks\\usePeekABoo.js":"37","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\personalInfo.js":"38","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\VideoCard.js":"39","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\App.js":"40","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\jobs\\Videos.js":"41","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\jobs\\Apps.js":"42","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\SimpleInfo.js":"43","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\PageArrow.js":"44","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\skills.js":"45","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\utils\\imagesLoader.js":"46","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\Menu.js":"47"},{"size":1434,"mtime":1611578513500,"results":"48","hashOfConfig":"49"},{"size":709,"mtime":1611536114042,"results":"50","hashOfConfig":"49"},{"size":2338,"mtime":1611574070383,"results":"51","hashOfConfig":"49"},{"size":1703,"mtime":1611438220118,"results":"52","hashOfConfig":"49"},{"size":3759,"mtime":1611505659711,"results":"53","hashOfConfig":"49"},{"size":167,"mtime":1611004722366,"results":"54","hashOfConfig":"49"},{"size":2336,"mtime":1611507900961,"results":"55","hashOfConfig":"49"},{"size":1570,"mtime":1611143938588,"results":"56","hashOfConfig":"49"},{"size":1925,"mtime":1611437823426,"results":"57","hashOfConfig":"49"},{"size":1207,"mtime":1610891616924,"results":"58","hashOfConfig":"49"},{"size":1690,"mtime":1610456057098,"results":"59","hashOfConfig":"49"},{"size":4921,"mtime":1611529079340,"results":"60","hashOfConfig":"49"},{"size":764,"mtime":1610556179722,"results":"61","hashOfConfig":"49"},{"size":1103,"mtime":1610570511231,"results":"62","hashOfConfig":"49"},{"size":7608,"mtime":1611574381986,"results":"63","hashOfConfig":"49"},{"size":413,"mtime":1611066655228,"results":"64","hashOfConfig":"49"},{"size":776,"mtime":1610570958089,"results":"65","hashOfConfig":"49"},{"size":664,"mtime":1609798683283,"results":"66","hashOfConfig":"49"},{"size":288,"mtime":1609250672224,"results":"67","hashOfConfig":"49"},{"size":998,"mtime":1611013799388,"results":"68","hashOfConfig":"49"},{"size":693,"mtime":1609249562512,"results":"69","hashOfConfig":"49"},{"size":384,"mtime":1609177481318,"results":"70","hashOfConfig":"49"},{"size":416,"mtime":1611007891201,"results":"71","hashOfConfig":"49"},{"size":773,"mtime":1611497577017,"results":"72","hashOfConfig":"49"},{"size":940,"mtime":1611536528059,"results":"73","hashOfConfig":"49"},{"size":808,"mtime":1610727016140,"results":"74","hashOfConfig":"49"},{"size":4572,"mtime":1611516524293,"results":"75","hashOfConfig":"49"},{"size":872,"mtime":1611013658341,"results":"76","hashOfConfig":"49"},{"size":1728,"mtime":1611577368801,"results":"77","hashOfConfig":"49"},{"size":362,"mtime":1606325819069,"results":"78","hashOfConfig":"49"},{"size":2834,"mtime":1611526126567,"results":"79","hashOfConfig":"49"},{"size":622,"mtime":1609769361096,"results":"80","hashOfConfig":"49"},{"size":7392,"mtime":1611494904069,"results":"81","hashOfConfig":"49"},{"size":2255,"mtime":1609798651467,"results":"82","hashOfConfig":"49"},{"size":193,"mtime":1611516575392,"results":"83","hashOfConfig":"49"},{"size":684,"mtime":1611492259940,"results":"84","hashOfConfig":"49"},{"size":2228,"mtime":1611066494629,"results":"85","hashOfConfig":"49"},{"size":418,"mtime":1611008469389,"results":"86","hashOfConfig":"49"},{"size":1220,"mtime":1611516766504,"results":"87","hashOfConfig":"49"},{"size":3539,"mtime":1611535830636,"results":"88","hashOfConfig":"49"},{"size":2482,"mtime":1611516779182,"results":"89","hashOfConfig":"49"},{"size":3927,"mtime":1611577116395,"results":"90","hashOfConfig":"49"},{"size":371,"mtime":1611007015058,"results":"91","hashOfConfig":"49"},{"size":507,"mtime":1611352386902,"results":"92","hashOfConfig":"49"},{"size":1432,"mtime":1610571899125,"results":"93","hashOfConfig":"49"},{"size":315,"mtime":1611176615956,"results":"94","hashOfConfig":"49"},{"size":761,"mtime":1611507736027,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6n6yv8",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"131"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"154"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"131"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"154"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"131"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"131"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"131"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\jobs\\briefApps.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\index.js",[],["211","212"],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\context\\PagesContext.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\Skills.js",["213","214"],"import { useContext, useEffect, useState } from \"react\"\r\nimport Waiter from \"../components/Waiter\"\r\nimport { front, back, others } from \"../datasets/skills\"\r\nimport { PagesContext } from \"../context/PagesContext\"\r\nimport IconsCard from \"../components/IconsCard\"\r\nimport withScrollable from \"../HOC/withScrollable\"\r\n\r\nimport \"../css/Page.css\"\r\nimport \"../css/Skills.css\"\r\n\r\nfunction Skills(){\r\n    const { setPageInfo, updateSize } = useContext(PagesContext)\r\n    const [ isShowing, setIsShowing ] = useState(false)\r\n\r\n    useEffect(() => {\r\n        document.title = \"GHS: Habilidades\"\r\n        setPageInfo({ name: \"habilidades\", mainColor: \"var(--habilidades)\", blurryText: \"skills\" })\r\n    }, [])\r\n\r\n    useEffect(updateSize, [isShowing])\r\n    \r\n    return (\r\n        <div className=\"skills\">\r\n            <Waiter wait={2000} callback={() => setIsShowing(true)}>\r\n                <div className=\"time-information\">\r\n                    <div className=\"circle\"></div>\r\n                    <span>Quanto mais opaca, mais tempo faz desde a última vez que a utilizei</span>\r\n                </div>\r\n                <div className=\"cards\">\r\n                    <div className=\"card-placeholder\">\r\n                        <IconsCard name=\"front-end\" data={front}/>\r\n                    </div>\r\n                    <div className=\"card-placeholder\">\r\n                        <IconsCard name=\"back-end\" data={back}/>\r\n                    </div>\r\n\r\n                    <div className=\"card-placeholder\">\r\n                        <IconsCard name=\"outros\" data={others}/>\r\n                    </div>\r\n                </div>\r\n            </Waiter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withScrollable(Skills)","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\Contact.js",["215"],"import { useContext, useEffect, useRef } from \"react\"\r\nimport { PagesContext } from \"../context/PagesContext\"\r\nimport AnimatedText from \"../components/AnimatedText\"\r\nimport withScrollable from \"../HOC/withScrollable\"\r\nimport Waiter from \"../components/Waiter\"\r\nimport PERSONAL_INFO from \"../datasets/personalInfo\"\r\nimport contactAnimation from \"../media/lottie/contact.json\"\r\nimport lottie from \"lottie-web\"\r\n\r\nimport \"../css/Contact.css\"\r\nimport SimpleInfo from \"../components/SimpleInfo\"\r\nimport getSocialIcon from \"../datasets/socialIcons\"\r\n\r\nfunction Contact() {\r\n    const { setPageInfo } = useContext(PagesContext)\r\n    const lottieRef = useRef(undefined)\r\n\r\n    useEffect(() => {\r\n        document.title = `GHS: Contato`\r\n        setPageInfo({ name: \"contato\", mainColor: \"var(--contato)\", blurryText: \"contact\" })\r\n    }, [])\r\n\r\n    const loadAnimation = () => {\r\n        if(lottieRef.current){\r\n            lottie.loadAnimation({\r\n                container: lottieRef.current,\r\n                autoplay: true,\r\n                loop: false,\r\n                animationData: contactAnimation,\r\n                rendererSettings : {\r\n                    filterSize: {\r\n                      width: '200%',\r\n                      height: '200%',\r\n                      x: '-50%',\r\n                      y: '-50%',\r\n                    }\r\n                  }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact\">\r\n            <Waiter wait={2000} callback={loadAnimation}>\r\n                <div className=\"lottie\" ref={lottieRef}></div>\r\n            </Waiter>\r\n            <Waiter wait={2000}>\r\n                <div className=\"left-container\">\r\n                    <div className=\"top\">\r\n                        <div className=\"headline\">\r\n                            <AnimatedText text=\"vamos trabalhar\"/>\r\n                            <Waiter wait={500}>\r\n                                <AnimatedText text=\"juntos?!\"/>\r\n                            </Waiter>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bottom\">\r\n                        <SimpleInfo className=\"email\" title=\"E-mail\">\r\n                            { PERSONAL_INFO.email }\r\n                        </SimpleInfo>\r\n                        <SimpleInfo  className=\"phone\" title=\"Telefone\">\r\n                            { PERSONAL_INFO.phone }\r\n                        </SimpleInfo>\r\n                        <SimpleInfo className=\"social-container\" title=\"Social\">\r\n                            <div className=\"social spaced-items\">\r\n                            {\r\n                                PERSONAL_INFO.social.map(([name, link], index) => {\r\n                                    const Icon = getSocialIcon(name)\r\n                                    return (\r\n                                        <a key={index} href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                            <Icon />\r\n                                        </a>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </div> \r\n                        </SimpleInfo>\r\n                        <SimpleInfo className=\"resume\" title=\"Currículo\">\r\n                            <a href={PERSONAL_INFO.resume} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <button className=\"resume-btn\">\r\n                                        currículo.pdf\r\n                                </button>\r\n                            </a>\r\n                        </SimpleInfo>\r\n                    </div>\r\n                </div>\r\n            </Waiter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withScrollable(Contact)","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\data\\pagesURL.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\Home.js",["216"],"import React, { useContext, useEffect } from \"react\"\r\nimport Waiter from \"../components/Waiter\"\r\nimport AnimatedText from \"../components/AnimatedText\"\r\nimport TextCarousel from \"../components/TextCarousel\"\r\nimport handImg from \"../media/images/hand.png\"\r\nimport PAGE_COLORS from \"../data/pageColors\"\r\nimport { PagesContext } from \"../context/PagesContext\"\r\nimport Bubbles from \"../components/Bubbles\"\r\nimport PAGES_URL from \"../data/pagesURL\"\r\n\r\nimport \"../css/Page.css\"\r\nimport \"../css/Home.css\"\r\nimport \"../css/Bubbles.css\"\r\nimport PageArrow from \"../components/PageArrow\"\r\n\r\nexport default function Home(){\r\n    const { setPageInfo } = useContext(PagesContext)\r\n    const colors = PAGE_COLORS.PINK\r\n    const adjectives = [\r\n        \"desenvolvedor\",\r\n        '\"designer\"',\r\n        \"pouco muito míope\",\r\n        \"amante de música\",\r\n        \"pouco desastrado\",\r\n        \"péssimo cantor\",\r\n        \"blink\",\r\n        '\"leitor\"'\r\n    ]\r\n\r\n    useEffect(() => {\r\n        document.title = `GHS`\r\n        setPageInfo({ name: \"\", mainColor: \"var(--sobre)\", blurryText: \"home\" })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <PageArrow goToPage={PAGES_URL.ABOUT} pageName=\"Sobre Mim\" split={true}/>\r\n            <section className=\"card\">\r\n                <div className=\"hi\">\r\n                    <AnimatedText delay={30} text=\"oi!\"/>\r\n                    <Waiter wait={1200}>\r\n                        <AnimatedText className=\"my-name-is\" delay={30} text=\"meu nome é\"/>\r\n                    </Waiter>\r\n                </div>\r\n                <Waiter wait={1700}>\r\n                    <AnimatedText className=\"name\" delay={30} text=\"GUILHERME H. SCARPEL\" style={{color: colors[0]}}/>\r\n                </Waiter>\r\n                <div className=\"i-am\">\r\n                    <Waiter wait={2500}>\r\n                        <AnimatedText delay={30} text=\"eu sou um \"/>\r\n                    </Waiter>\r\n                    <Waiter wait={2900}>\r\n                        <TextCarousel className=\"adjectives\" delay={30} words={adjectives}/>\r\n                    </Waiter>\r\n                </div>\r\n            </section>\r\n            <img className=\"hand-emoji\" alt=\"Hand emoji\" src={handImg}/>\r\n            <Waiter wait={3100}>\r\n                <Bubbles colors={colors}/>\r\n            </Waiter>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\Jobs.js",["217","218"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport Designs from \"./jobs/Designs\"\r\nimport Videos from \"./jobs/Videos\"\r\nimport Apps from \"./jobs/Apps\"\r\nimport { PagesContext } from \"../context/PagesContext\"\r\nimport Waiter from \"../components/Waiter\"\r\nimport withScrollable from \"../HOC/withScrollable\"\r\n\r\nimport \"../css/Page.css\"\r\nimport \"../css/Jobs.css\"\r\n\r\nfunction Jobs() {\r\n    const { setPageInfo, updateSize, pageInfo } = useContext(PagesContext)\r\n    const [ CurrentPage, setCurrentPage ] = useState(() => Apps)\r\n    const isQuick = pageInfo.currentPage === \"appDetails\"? true: false\r\n\r\n    useEffect(() => {\r\n        setPageInfo({ \r\n            name: \"trabalhos\", \r\n            mainColor: \"var(--trabalhos)\", \r\n            blurryText: \"jobs\",\r\n            pagination: [\r\n                {\r\n                    name: \"Apps\",\r\n                    callback: () => setCurrentPage(() => Apps)\r\n                },\r\n                { \r\n                    name: \"Design\",\r\n                    callback: () => setCurrentPage(() => Designs)\r\n                },\r\n                { \r\n                    name: \"Videos\",\r\n                    callback: () => setCurrentPage(() => Videos)\r\n                }\r\n            ],\r\n            quick: isQuick\r\n        })\r\n    }, [])\r\n\r\n    useEffect(updateSize, [CurrentPage])\r\n\r\n    return (\r\n        <div className=\"jobs\">\r\n            <Waiter wait={isQuick? 0: 2000} callback={updateSize}>\r\n                {<CurrentPage />}\r\n            </Waiter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withScrollable(Jobs)","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\Navbar.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\GlitchText.js",["219"],"import React, { useEffect, useRef } from \"react\"\r\nimport \"../css/GlitchText.css\"\r\n\r\nexport default function GlitchText(props) {\r\n    const { text, repetitions=0, delay = 200, color = undefined, quick } = props\r\n    const extra = useRef(undefined)\r\n\r\n    useEffect(() => {\r\n        if(extra.current){\r\n            if(repetitions) setTimeout(() => { if(extra.current) extra.current.style.display = \"none\" }, (delay*repetitions)+1500)\r\n            else extra.current.style.display = \"none\"\r\n        }\r\n    }, [])\r\n\r\n    const getRepetitions = () => {\r\n        let rows = []\r\n\r\n        for(let i=0; i<repetitions; i++){\r\n            rows.push(\r\n                <span className=\"auxiliar-text\" key={i} style={{animationDelay: `${i*delay}ms`, WebkitTextStrokeColor: color}}>\r\n                    {text}\r\n                </span>\r\n            )\r\n        }\r\n\r\n        return rows\r\n    }\r\n\r\n    return (\r\n        <div className={`glitch-text ${quick && \"quick\"}`}>\r\n            <span className=\"main-text\" style={{color}}>{text}</span>\r\n            <div className=\"repetitions\" ref={extra}>\r\n                {\r\n                    [...getRepetitions()]\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\BlurryText.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\About.js",["220"],"import { useEffect, useContext, useRef } from \"react\"\r\nimport Presentation from \"./about/Presentation\"\r\nimport { PagesContext } from \"../context/PagesContext\"\r\nimport Certificades from \"../components/Certificades\"\r\nimport withScrollable from \"../HOC/withScrollable\"\r\nimport lottie from \"lottie-web\"\r\nimport statueAnimation from \"../media/lottie/sobre.json\"\r\nimport graduationAnimation from \"../media/lottie/cap.json\"\r\nimport certificationAnimation from \"../media/lottie/certificade.json\"\r\nimport useWindowSize from \"../hooks/useWindowSize\"\r\nimport usePeekABoo from \"../hooks/usePeekABoo\"\r\nimport certificados from \"../datasets/certificados\"\r\nimport { join } from \"path\"\r\n\r\nimport \"../css/Page.css\"\r\nimport \"../css/About.css\"\r\nimport { CERTFICADES_MINIATURE } from \"../data/imgPath\"\r\n\r\nfunction About() {\r\n    const { setPageInfo } = useContext(PagesContext)\r\n    const size = useWindowSize()\r\n    const statue = useRef()\r\n    const graduation = useRef()\r\n    const certificade = useRef()\r\n    const aboutRef = useRef()\r\n    const educationRef = useRef()\r\n    const certificadesRef = useRef()\r\n\r\n    const handlePeekABoo = (divRef, animationRef, animation) => {\r\n        loadAnimation(animationRef, animation)\r\n        divRef.current.classList.remove(\"hidden\")\r\n    }\r\n\r\n    usePeekABoo({\r\n        items: [\r\n            {\r\n                ref: aboutRef,\r\n                callback: () => handlePeekABoo(aboutRef, statue, statueAnimation),\r\n                percentage: 0.2\r\n            },\r\n            {\r\n                ref: educationRef,\r\n                callback: () => handlePeekABoo(educationRef, graduation, graduationAnimation),\r\n                percentage: 0.2\r\n            },\r\n            {\r\n                ref: certificadesRef,\r\n                callback: () => handlePeekABoo(certificadesRef, certificade, certificationAnimation),\r\n                percentage: 0.15\r\n            }\r\n        ],\r\n        windowSize: size.width,\r\n        timeout: 2500,\r\n        triggerAtStart: true\r\n    })\r\n\r\n    const loadAnimation = (ref, animation) => {\r\n        if(ref.current){\r\n            lottie.loadAnimation({\r\n                container: ref.current,\r\n                autoplay: true,\r\n                loop: false,\r\n                animationData: animation\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = `GHS: Sobre Mim`\r\n        setPageInfo({ name: \"sobre mim\", mainColor: \"var(--sobre)\", blurryText: \"about\" })\r\n        \r\n        if(\"ontouchstart\" in window){\r\n            const timeouts = [\r\n                setTimeout(() => handlePeekABoo(aboutRef, statue, statueAnimation), 2500),\r\n                setTimeout(() => handlePeekABoo(educationRef, graduation, graduationAnimation), 3000),\r\n                setTimeout(() => handlePeekABoo(certificadesRef, certificade, certificationAnimation), 3500)\r\n            ]\r\n\r\n            return () => timeouts.map(timeout => window.clearTimeout(timeout))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"about\">\r\n            <Presentation />\r\n            <div className=\"about-me hidden\" ref={aboutRef}>\r\n                <div className=\"lottie-container statue\" ref={statue}></div>\r\n                <section className=\"text-block\">\r\n                    <p>\r\n                        eu sempre gostei de <em>criar</em>, unindo isso a minha demasiada <em>curiosidade</em> e  \r\n                        <em> paixão por computadores</em> (bom, na época era mais por The Sims 2, mas enfim...) \r\n                        eu descobri no <em>desenvolvimento</em> uma paixão que poderia levar para a vida profissional...\r\n                    </p>\r\n                </section>\r\n            </div>\r\n            \r\n            <div className=\"education hidden\" ref={educationRef}>\r\n                <div className=\"lottie-container graduation\" ref={graduation}></div>\r\n                <section className=\"text-block\">\r\n                    <p>\r\n                        ... eu, então, tornei-me <em>técnico em Informática</em> pela ETEC João Batista de Lima Figueiredo e \r\n                        sou, quase, um <em>bacharel em Ciência da Computação</em> pela Universidade Federal de Uberlândia...\r\n                    </p>\r\n                </section>\r\n            </div>\r\n\r\n            <div className=\"certificades-container hidden\" ref={certificadesRef}>\r\n                <div className=\"lottie-container certificade\" ref={certificade}></div>\r\n                <section className=\"text-block\">\r\n                    <p>\r\n                        ... além disso, estou sempre <em>aprendendo algo novo</em>, uma fato que me \r\n                        rendeu alguns <em>certificados</em>...\r\n                    </p>\r\n                </section>\r\n                <Certificades data={certificados} path={join(process.env.PUBLIC_URL, CERTFICADES_MINIATURE)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withScrollable(About)","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\hooks\\useWindowSize.js",["221","222"],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\PagesSelector.js",[],["223","224"],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\jobs\\AppDetails.js",["225","226","227","228"],"import { useContext, useEffect, useRef, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { PagesContext } from \"../../context/PagesContext\"\r\nimport getToolIcon from \"../../datasets/toolIcons\"\r\nimport APPS from \"../../datasets/jobs/apps\"\r\nimport { APPS_IMGS } from \"../../data/imgPath\"\r\nimport { join } from \"path\"\r\nimport ImageGrid from \"../../components/ImageGrid\"\r\n\r\nimport withScrollable from \"../../HOC/withScrollable\"\r\n\r\nimport \"../../css/AppDetails.css\"\r\nimport \"../../css/ImageGrid.css\"\r\nimport { loadAllImages } from \"../../utils/imagesLoader\"\r\n\r\nfunction AppDetails(){\r\n    const { appID } = useParams()\r\n    const { setPageInfo, updateSize, windowSize, isTouch } = useContext(PagesContext)\r\n    const [ app, setApp ] = useState(undefined)\r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n    const [ isImgLoaded, setIsImgLoaded ] = useState(false)\r\n    const mediaPath = join(process.env.PUBLIC_URL, APPS_IMGS, appID)\r\n    const mainRef = useRef(undefined)\r\n    const contentRef = useRef(undefined)\r\n\r\n    const calculateNumColumns = (children, height) => {\r\n        let numColumns = 0, numElements = 0, total = height\r\n\r\n        for(let i=0, length=children.length; i<length;i++){\r\n            const offsetHeight = children[i].offsetHeight\r\n\r\n            if(offsetHeight>total){\r\n                numColumns++\r\n\r\n                if(numElements === 0) total = height\r\n                else{\r\n                    numElements = 1\r\n                    total = height-offsetHeight \r\n                }\r\n            }else{\r\n                total -= offsetHeight\r\n                numElements++\r\n            }\r\n        }\r\n\r\n        return numElements>0? numColumns+1 : numColumns\r\n    }\r\n\r\n    const handleTopicWidths = () => {\r\n        const topics = document.querySelectorAll(\".topic\")\r\n\r\n        if(topics){\r\n            const width = document.querySelector(\".topic-content\").offsetWidth\r\n            const mainHeight = contentRef.current.offsetHeight\r\n            \r\n            for(let i=0, length=topics.length; i<length; i++){\r\n                const topic = topics[i]\r\n                const numColumns = calculateNumColumns(topic.childNodes, mainHeight)\r\n                topic.style.width = `${(numColumns)*width + (numColumns-1)*40}px`\r\n            }\r\n\r\n            updateSize()\r\n        }\r\n    }\r\n\r\n    const getTopicContentElements = (topicIndex, content) => {\r\n        return content.map(([title, description], index) => (\r\n            <section key={`t${topicIndex}c${index}`} className=\"topic-content\" style={{animationDelay: `${index*200}ms`}}>\r\n                <h2 className=\"question\">{title}</h2>\r\n                <p>{description}</p>\r\n            </section>\r\n        ))\r\n    }\r\n\r\n    const getTopicElement = (index, topics) => {\r\n        return (\r\n            <div className=\"topic\" key={`t${index}`}>\r\n            {\r\n                [...getTopicContentElements(index, topics)]\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getHighlightElement = (index, highlight) => (\r\n        <div key={`h-${index}`} className=\"highlight\" style={{animationDelay: `${(index+1)*400}ms`}}>\r\n            <img alt=\"highlight\" src={join(mediaPath, highlight.url)}/>\r\n        </div>\r\n    )\r\n\r\n    const getContentElements = () => {\r\n        const contents = []\r\n        const { highlights, topics } = app\r\n        let highlightsIndex = 0\r\n\r\n        for(let i=0, length=topics.length; i<length; i++){\r\n            if(highlights[highlightsIndex]){\r\n                contents.push(getHighlightElement(highlightsIndex, highlights[highlightsIndex]))\r\n                highlightsIndex++\r\n            }\r\n            contents.push(getTopicElement(i, topics[i]))\r\n        }\r\n\r\n        return contents\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(app){\r\n            document.title = `GHS: ${app.name}`\r\n            const { squares = [], portraits  = [], panoramas = [] } = app.images\r\n\r\n            handleTopicWidths()\r\n            updateSize()\r\n\r\n            loadAllImages([...squares, ...portraits, ...panoramas].map(src => join(mediaPath, src)))\r\n                .then(() => setIsImgLoaded(true))\r\n                .catch(err => console.log(\"Error while loading app's images\", err))\r\n        }\r\n    }, [app])\r\n\r\n    useEffect(() => { if(app) handleTopicWidths() }, [windowSize])\r\n\r\n    useEffect(updateSize, [isImgLoaded])\r\n\r\n    useEffect(() => {\r\n        setPageInfo({ \r\n            name: \"trabalhos\", \r\n            mainColor: \"var(--black)\", \r\n            highlightColor: \"var(--app-details)\",\r\n            blurryText: \"\",\r\n            quick: true,\r\n            dark: true,\r\n            currentPage: \"appDetails\"\r\n        })\r\n\r\n        setApp(APPS[appID])\r\n        setIsLoading(false)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`app-details ${isTouch && \"touch\"}`} ref={mainRef}>\r\n        {\r\n            !isLoading && (\r\n                <>\r\n                <section className=\"info\">\r\n                    <div className=\"tools spaced-items\">\r\n                    {\r\n                        app.tools.map((name, index) => {\r\n                            const Icon = getToolIcon(name)\r\n                            return <Icon key={index}/>\r\n                        })\r\n                    }\r\n                    </div>\r\n                    <h1 className=\"name\">{app.name}</h1>\r\n                    <p className=\"desc\">{app.description}</p>\r\n                    { app.links && (\r\n                        <div className=\"links spaced-items\">\r\n                        {\r\n                            app.links.map(([name, link], index) => (\r\n                                <a \r\n                                    key={`l-${index}`} \r\n                                    className=\"btn\" \r\n                                    role=\"button\"\r\n                                    href={link}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                >\r\n                                    {name}\r\n                                </a>\r\n                            ))\r\n                        }\r\n                        </div>\r\n                    )}\r\n                </section>\r\n                <div className=\"content spaced-items\" ref={contentRef}>\r\n                {\r\n                    [...getContentElements()]\r\n                }\r\n                </div>\r\n                <div className=\"galery\">\r\n                    <h2 className=\"title\">galery</h2>\r\n                    <h2 className=\"hollow-title\">galery</h2>\r\n                    {\r\n                        isImgLoaded?\r\n                            <ImageGrid \r\n                                data={app.images}\r\n                                path={mediaPath}\r\n                            />\r\n                        :\r\n                            <div className=\"image-grid mock\">\r\n                                <div className=\"squares-panorama\">\r\n                                    <div className=\"squares\">\r\n                                        <div className=\"square\" style={{animationDelay: \"0.2s\"}}></div>\r\n                                        <div className=\"square\" style={{animationDelay: \"0.4s\"}}></div>\r\n                                    </div>\r\n                                    <div className=\"panorama\" style={{animationDelay: \"0.3s\"}}></div>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withScrollable(AppDetails)","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\Waiter.js",["229"],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\AnimatedText.js",["230"],"import { useEffect, useRef } from \"react\"\r\nimport \"../css/AnimatedText.css\"\r\n\r\nexport default function AnimatedText(props) {\r\n    const { text, delay=30, className = \"\", style = {} } = props\r\n    const ref = useRef(undefined)\r\n    const id = new Date().getTime()\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => ref.current && ref.current.classList.add(\"done\"), 700+(text.length*delay))\r\n        return () => window.clearTimeout(timeout)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`animated-text ${className}`} style={style} ref={ref}>\r\n            {\r\n                [...text].map((letter, index) => <div className=\"letter\" key={`${id}${index}`} style={{animationDelay: `${index*delay}ms`}}>{letter}</div>)\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\IconsCard.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\data\\pageColors.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\TextCarousel.js",["231"],"import { useState, useEffect } from \"react\"\r\nimport AnimatedText from \"./AnimatedText\"\r\n\r\nimport \"../css/TextCarousel.css\"\r\n\r\nexport default function TextCarousel(props) {\r\n    const { words=[\"\"], className, delay=30 } = props\r\n    const [currentIndex, setCurrentIndex] = useState(0)\r\n    const currentWord = words[currentIndex]\r\n    const wordDelay = currentWord.length*delay\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            const newCurrentIndex = currentIndex + 1\r\n            setCurrentIndex(newCurrentIndex === words.length? 0 : newCurrentIndex)\r\n        }, 3000 + wordDelay)\r\n\r\n        return () => window.clearTimeout(timeout)\r\n    }, [currentIndex])\r\n\r\n    return (\r\n        <div className={`text-carousel ${className}`}>\r\n            <AnimatedText key={currentIndex} delay={delay} text={words[currentIndex]}/>\r\n            <div key={currentWord+currentIndex} className=\"underline\" style={{animationDelay: `${wordDelay}ms`}}></div>\r\n        </div>\r\n    )\r\n}",["232","233"],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\Bubbles.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\MenuIcon.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\socialIcons.js",[],["234","235"],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\Certificades.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\certificados.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\toolIcons.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\ImageGrid.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\ImageFollowingText.js",["236"],"import { useRef } from \"react\"\r\n\r\nimport \"../css/ImageFollowingText.css\"\r\n\r\nexport default function ImageFollowingText(props) {\r\n    const { data } = props\r\n    const imgRef = useRef()\r\n    const aRef = useRef()\r\n\r\n    const handleMouseMove = e => {\r\n        if(e.target.nodeName !== \"IMG\"){\r\n            const { offsetX, offsetY } = e.nativeEvent\r\n            imgRef.current.style.transform = `translate3d(${offsetX-20}px, ${offsetY}px, 0)`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className =\"img-following-text\"\r\n            onMouseMove = {handleMouseMove}\r\n            onClick={() => aRef.current.click()}\r\n        >\r\n            <a ref={aRef} href={data.link} target=\"_blank\" rel=\"noopener noreferrer\"></a>\r\n            <span>{ data.text }</span>\r\n            <img ref={imgRef} src={ data.src } alt={\"Following Text\"} />\r\n        </div>\r\n    )\r\n}","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\AppCard.js",["237"],"import getToolIcon from \"../datasets/toolIcons\"\r\nimport lottie from \"lottie-web\"\r\nimport { join } from \"path\"\r\n\r\nimport \"../css/AppCard.css\"\r\nimport { useEffect, useRef } from \"react\"\r\n\r\nexport default function AppCard(props) {\r\n    const { item, numTools = 5, style = {}, className=\"\", handleClick = () => {}, path=\"\" } = props\r\n    const lottieRef = useRef()\r\n\r\n    useEffect(() => {\r\n        if(item.animationName){\r\n            const animation = lottie.loadAnimation({\r\n                container: lottieRef.current,\r\n                autoplay: true,\r\n                loop: item.loop !== undefined? item.loop : true,\r\n                path: join(path, item.animationName)\r\n            })\r\n            return () => animation.stop()\r\n        }\r\n    }, [])\r\n\r\n    const getToolsArray = () => {\r\n        if(item.tools.length>numTools){\r\n            return [...item.tools.slice(0, numTools), \"+\"]\r\n        }else return item.tools\r\n    }\r\n\r\n    return (\r\n        <div className={`app-card ${className}`} style={style}>\r\n            <div className=\"app-img\" ref={lottieRef}>\r\n            </div>\r\n            <section className=\"app-info\">\r\n                <div className={`app-tools spaced-items ${item.tools.length>numTools? \"full\":\"\"}`}>\r\n                {\r\n                    getToolsArray().map((name, index) => {\r\n                        const Icon = getToolIcon(name)\r\n                        return <Icon key={index}/>\r\n                    })\r\n                }\r\n                </div>\r\n                <h1 className=\"app-title\">{item.name}</h1>\r\n                <p className=\"app-desc\">{item.description}</p>\r\n                <button onClick={handleClick}>+ detalhes</button>\r\n            </section>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\reportWebVitals.js",[],["238","239"],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\jobs\\Designs.js",["240","241"],"import { useState, useEffect, useContext } from \"react\"\r\nimport ImageGrid from \"../../components/ImageGrid\"\r\nimport { panoramas, portraits, squares } from \"../../datasets/design_imgs\"\r\nimport AnimatedText from \"../../components/AnimatedText\"\r\nimport { loadAllImages } from \"../../utils/imagesLoader\"\r\nimport { join } from \"path\"\r\nimport { DESIGN_IMGS } from \"../../data/imgPath\"\r\nimport { PagesContext } from \"../../context/PagesContext\"\r\n\r\n\r\nimport \"../../css/Designs.css\"\r\nimport \"../../css/StandardJobPage.css\"\r\nimport \"../../css/ImageGrid.css\"\r\n\r\nexport default function Designs(){\r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n    const { updateSize } = useContext(PagesContext)\r\n    const path = join(process.env.PUBLIC_URL, DESIGN_IMGS)\r\n\r\n    useEffect(() => {\r\n        document.title = `GHS: Designs`\r\n        loadAllImages([...squares, ...panoramas, ...portraits].map(src => join(path, src)))\r\n            .then(() => setIsLoading(false))\r\n            .catch(err => console.log(\"Error while loading design images\", err))\r\n    }, [])\r\n\r\n    useEffect(updateSize, [isLoading])\r\n\r\n    return (\r\n        <div key=\"designs\" className=\"designs job-page\">\r\n            <div className=\"design-info job-desc\">\r\n                <AnimatedText text=\"designs\" delay={40}/>\r\n                <p>\r\n                    alguns dos meus trabalhos como designer gráfico\r\n                    e/ou projetos que fiz no meu tempo livre.\r\n                </p>\r\n            </div>\r\n\r\n            {\r\n                isLoading?\r\n                    (<div className=\"image-grid mock spaced-items\">\r\n                        <div className=\"two-squares spaced-items-vertical\">\r\n                            <div className=\"square\"></div>\r\n                            <div className=\"square\" style={{animationDelay: \"0.1s\"}}></div>\r\n                        </div>\r\n                        <div className=\"squares-panorama spaced-items-vertical\">\r\n                            <div className=\"squares spaced-items\">\r\n                                <div className=\"square\" style={{animationDelay: \"0.2s\"}}></div>\r\n                                <div className=\"square\" style={{animationDelay: \"0.4s\"}}></div>\r\n                            </div>\r\n                            <div className=\"panorama\" style={{animationDelay: \"0.3s\"}}></div>\r\n                        </div>\r\n                        <div className=\"portrait-container\">\r\n                            <div className=\"portrait\" style={{animationDelay: \"0.5s\"}}></div>\r\n                        </div>\r\n                    </div>)\r\n                :\r\n                (\r\n                    <ImageGrid\r\n                        data={{ squares, panoramas, portraits }}\r\n                        path={path}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\HOC\\withScrollable.js",["242"],"import { useEffect, useRef, useContext } from \"react\"\r\nimport { PagesContext } from \"../context/PagesContext\"\r\n\r\nimport \"../css/Scrollable.css\"\r\n\r\nexport default function withScrollable(Component){\r\n    return function (props) {\r\n        const { setCurrentRef } = useContext(PagesContext)\r\n        const scrollRef = useRef(undefined)\r\n\r\n        useEffect(() => {\r\n            setCurrentRef(scrollRef)\r\n            return () => { setCurrentRef() }\r\n        }, [])\r\n\r\n        return (\r\n            <div className=\"scrollable\" ref={scrollRef}>\r\n                <Component {...props}/>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\jobs\\apps.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\SkillCard.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\design_imgs.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\videos.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\hooks\\usePeekABoo.js",["243","244","245","246"],"import { useEffect, useState, useCallback, useRef } from \"react\"\r\nimport { throttle } from \"lodash\"\r\n\r\nexport default function usePeekABoo(props={}){\r\n    const { items = {}, percentage = 0.4, orientation = \"width\", windowSize, timeout = 0, triggerAtStart = false } = props\r\n    const elementSizeProperty = orientation === \"width\"? \"offsetWidth\":\"offsetHeight\"\r\n    const coordinate = orientation === \"width\"? \"x\":\"y\"\r\n    const [seen, setSeen] = useState(0)\r\n    const seenRef = useRef(seen)\r\n    const percentageRef = useRef([])\r\n\r\n    const verify = useCallback(throttle((e) => {\r\n        try{\r\n            if(e.deltaY>0){\r\n                let index = seenRef.current\r\n                const length = items.length\r\n                const percentages = percentageRef.current\r\n        \r\n                while(index<length){\r\n                    const bounding = items[index].ref.current.getBoundingClientRect()\r\n                    const coordinateValue = bounding[coordinate]\r\n        \r\n                    if(coordinateValue>0 && (windowSize-coordinateValue)<percentages[index]) break\r\n                    else index++\r\n                }\r\n        \r\n                if(index !== seenRef.current){\r\n                    for(let i=seenRef.current; i<index; i++){\r\n                        const item = items[i]\r\n                        if(item.callback) item.callback()\r\n                    }\r\n        \r\n                    setSeen(index)\r\n                }\r\n            }\r\n        } catch (e){\r\n            return undefined\r\n        }\r\n    }, 1000), [])\r\n\r\n    useEffect(() => {\r\n        percentageRef.current = items.map(item => item.ref.current[elementSizeProperty] * (item.percentage || percentage))\r\n    }, [windowSize])\r\n\r\n    useEffect(() => {\r\n        const t = setTimeout(() => {\r\n            window.addEventListener(\"wheel\", verify)\r\n            if(triggerAtStart) verify({deltaY: 3})\r\n        }, timeout)\r\n\r\n        return () => {\r\n            window.clearTimeout(t)\r\n            window.removeEventListener(\"wheel\", verify)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        seenRef.current = seen\r\n        if(seen >= items.length) window.removeEventListener(\"wheel\", verify)\r\n    }, [seen])\r\n\r\n    return [seen]\r\n}","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\personalInfo.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\VideoCard.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\App.js",["247","248"],"import { useContext, useEffect } from \"react\"\nimport { Switch, Route, Redirect } from \"react-router-dom\"\nimport { PagesContext } from \"./context/PagesContext\"\nimport Home from \"./pages/Home\"\nimport About from \"./pages/About\"\nimport Jobs from \"./pages/Jobs\"\nimport PAGES_URL from \"./data/pagesURL\"\nimport AppDetails from \"./pages/jobs/AppDetails\"\nimport './App.css';\nimport Skills from \"./pages/Skills\"\nimport Navbar from \"./components/Navbar\"\nimport GlitchText from \"./components/GlitchText\"\nimport BlurryText from \"./components/BlurryText\"\nimport PagesSelector from \"./components/PagesSelector\"\n\nimport \"./css/StandardGlitchText.css\"\nimport Contact from \"./pages/Contact\"\n\nfunction App() {\n  const { currentRef, pageInfo, imageElement, setImageElement, windowSize } = useContext(PagesContext)\n  const deltaX = 50\n\n  const scrollingConfig = {\n      ease: .1,\n      current: 0,\n      previous: 0\n  }\n\n  const handleWheel = (e) => {\n    const scrolled = e.deltaY || e.deltaX\n    window.scrollBy(scrolled<0?-deltaX:deltaX,0)\n  }\n\n  const handleTouch = e => console.log(e)\n\n  useEffect(() => {\n    window.addEventListener(\"wheel\", handleWheel)\n    return () => { \n        window.removeEventListener(\"wheel\", handleWheel)\n        document.body.style.height = `100%`\n    }\n  }, [])\n\n  useEffect(() => {\n    if(currentRef) requestAnimationFrame(scrolling)\n  }, [currentRef])\n  \n  useEffect(() => {\n    if(currentRef) document.body.style.width = `${currentRef.current.getBoundingClientRect().width}px`\n    else document.body.style.width = \"100%\"\n  }, [windowSize.width, currentRef])\n\n  const scrolling = () => {\n      if(currentRef && currentRef.current){\n          scrollingConfig.current = window.scrollX;\n          scrollingConfig.previous += Math.round((scrollingConfig.current - scrollingConfig.previous) * scrollingConfig.ease)\n  \n          currentRef.current.style.transform = `translate3d(-${scrollingConfig.previous}px,0,0)`\n          requestAnimationFrame(scrolling)\n      }\n  }\n\n  return (\n    <div className=\"App\">\n        <div onClick={() => {setImageElement()}} className={`image-focus ${imageElement? \"showing\": \"hidden\"}`}>\n          <button>&times;</button>\n          { imageElement && <img \n              src={ imageElement.src }\n              alt=\"Zoom\"\n              onClick={(e) => e.stopPropagation()}\n              style={ imageElement.style }\n            />\n          }\n        </div>\n\n        <div className={`scrollable-container page ${pageInfo.dark && \"dark\"}`}>\n          <Navbar dark={pageInfo.dark}/>\n          { pageInfo.name && \n            <GlitchText\n              key={pageInfo.name} \n              text={pageInfo.name} \n              repetitions={3} \n              color={pageInfo.mainColor}\n              quick={pageInfo.quick}\n            />\n          }\n          { pageInfo.pagination && <PagesSelector items={pageInfo.pagination}/> }\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path={PAGES_URL.ABOUT} component={About}/>\n            <Route path={PAGES_URL.SKILLS} component={Skills}/>\n            <Route exact path={PAGES_URL.JOBS} component={Jobs}/>\n            <Route exact path={PAGES_URL.CONTACT} component={Contact}/>\n            <Route path={`${PAGES_URL.JOBS}/:appID`} component={AppDetails}/>\n            <Route path=\"*\">\n              <Redirect to=\"/\"/>\n            </Route>\n          </Switch>\n        { pageInfo.blurryText && <BlurryText key={pageInfo.blurryText} text={pageInfo.blurryText}/> }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\jobs\\Videos.js",["249"],"import { useContext, useEffect, useRef } from \"react\"\r\nimport VideoCard from \"../../components/VideoCard\"\r\nimport videos from \"../../datasets/videos\"\r\nimport AnimatedText from \"../../components/AnimatedText\"\r\nimport { PagesContext } from \"../../context/PagesContext\"\r\n\r\nimport \"../../css/StandardJobPage.css\"\r\nimport \"../../css/Videos.css\"\r\nimport { join } from \"path\"\r\nimport { VIDEOS_IMGS } from \"../../data/imgPath\"\r\n\r\nexport default function Videos() {\r\n    const { updateSize, windowSize } = useContext(PagesContext)\r\n    const mainRef = useRef(undefined)\r\n    const infoRef = useRef(undefined)\r\n    const containerRef = useRef(undefined)\r\n    const path = join(process.env.PUBLIC_URL, VIDEOS_IMGS)\r\n\r\n    const handleGridRows = () => {\r\n        if(windowSize.width>999){\r\n            const children = containerRef.current.childNodes\r\n            if(children.length>0){\r\n                const child = children[0]\r\n                const height = containerRef.current.offsetHeight\r\n                const itemsPerColumn = Math.trunc(height/child.offsetHeight)\r\n                const numColumns = Math.ceil(children.length/itemsPerColumn)\r\n                containerRef.current.style.gridTemplateRows = `repeat(${itemsPerColumn}, ${child.offsetHeight}px)`\r\n                containerRef.current.style.width = `${((numColumns+0.75)*child.offsetWidth) + ((numColumns-1)*50)}px`\r\n            }\r\n        }else containerRef.current.style.width = `${containerRef.current.offsetWidth*5}px`\r\n\r\n        updateSize()\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGridRows()\r\n    }, [windowSize])\r\n\r\n    useEffect(() => {\r\n        document.title = `GHS: Vídeos`\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"videos job-page\" ref={mainRef}>\r\n            <div className=\"videos-info job-desc\" ref={infoRef}>\r\n                <AnimatedText text=\"vídeos\" delay={40}/>\r\n                <p>\r\n                    alguns poucos vídeos que fiz e/ou editei.\r\n                </p>\r\n            </div>\r\n            <div className=\"videos-container\" ref={containerRef}>\r\n                {\r\n                    videos.map((video, index) => (\r\n                        <VideoCard \r\n                            style={{animationDelay: `${150*(index+1)}ms`}} \r\n                            info={video} \r\n                            key={index}\r\n                            path={path}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\pages\\jobs\\Apps.js",["250"],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\SimpleInfo.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\PageArrow.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\datasets\\skills.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\utils\\imagesLoader.js",[],"C:\\Users\\Guilherme\\Desktop\\New GHS\\ghs\\src\\components\\Menu.js",[],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":18,"column":8,"nodeType":"257","endLine":18,"endColumn":10,"suggestions":"258"},{"ruleId":"255","severity":1,"message":"259","line":20,"column":5,"nodeType":"260","endLine":20,"endColumn":14,"suggestions":"261"},{"ruleId":"255","severity":1,"message":"256","line":21,"column":8,"nodeType":"257","endLine":21,"endColumn":10,"suggestions":"262"},{"ruleId":"255","severity":1,"message":"256","line":33,"column":8,"nodeType":"257","endLine":33,"endColumn":10,"suggestions":"263"},{"ruleId":"255","severity":1,"message":"264","line":38,"column":8,"nodeType":"257","endLine":38,"endColumn":10,"suggestions":"265"},{"ruleId":"255","severity":1,"message":"259","line":40,"column":5,"nodeType":"260","endLine":40,"endColumn":14,"suggestions":"266"},{"ruleId":"255","severity":1,"message":"267","line":13,"column":8,"nodeType":"257","endLine":13,"endColumn":10,"suggestions":"268"},{"ruleId":"255","severity":1,"message":"269","line":81,"column":8,"nodeType":"257","endLine":81,"endColumn":10,"suggestions":"270"},{"ruleId":"255","severity":1,"message":"271","line":19,"column":26,"nodeType":"260","endLine":19,"endColumn":37},{"ruleId":"255","severity":1,"message":"272","line":27,"column":8,"nodeType":"257","endLine":27,"endColumn":10,"suggestions":"273"},{"ruleId":"251","replacedBy":"274"},{"ruleId":"253","replacedBy":"275"},{"ruleId":"255","severity":1,"message":"276","line":119,"column":8,"nodeType":"257","endLine":119,"endColumn":13,"suggestions":"277"},{"ruleId":"255","severity":1,"message":"278","line":121,"column":54,"nodeType":"257","endLine":121,"endColumn":66,"suggestions":"279"},{"ruleId":"255","severity":1,"message":"259","line":123,"column":5,"nodeType":"260","endLine":123,"endColumn":14,"suggestions":"280"},{"ruleId":"255","severity":1,"message":"281","line":138,"column":8,"nodeType":"257","endLine":138,"endColumn":10,"suggestions":"282"},{"ruleId":"255","severity":1,"message":"283","line":10,"column":8,"nodeType":"257","endLine":10,"endColumn":10,"suggestions":"284"},{"ruleId":"255","severity":1,"message":"285","line":12,"column":8,"nodeType":"257","endLine":12,"endColumn":10,"suggestions":"286"},{"ruleId":"255","severity":1,"message":"287","line":19,"column":8,"nodeType":"257","endLine":19,"endColumn":22,"suggestions":"288"},{"ruleId":"251","replacedBy":"289"},{"ruleId":"253","replacedBy":"290"},{"ruleId":"251","replacedBy":"291"},{"ruleId":"253","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":23,"column":13,"nodeType":"295","endLine":23,"endColumn":86},{"ruleId":"255","severity":1,"message":"296","line":22,"column":8,"nodeType":"257","endLine":22,"endColumn":10,"suggestions":"297"},{"ruleId":"251","replacedBy":"298"},{"ruleId":"253","replacedBy":"299"},{"ruleId":"255","severity":1,"message":"300","line":25,"column":8,"nodeType":"257","endLine":25,"endColumn":10,"suggestions":"301"},{"ruleId":"255","severity":1,"message":"259","line":27,"column":5,"nodeType":"260","endLine":27,"endColumn":14,"suggestions":"302"},{"ruleId":"255","severity":1,"message":"303","line":14,"column":12,"nodeType":"257","endLine":14,"endColumn":14,"suggestions":"304"},{"ruleId":"255","severity":1,"message":"271","line":12,"column":20,"nodeType":"260","endLine":12,"endColumn":31},{"ruleId":"255","severity":1,"message":"305","line":43,"column":8,"nodeType":"257","endLine":43,"endColumn":20,"suggestions":"306"},{"ruleId":"255","severity":1,"message":"307","line":55,"column":8,"nodeType":"257","endLine":55,"endColumn":10,"suggestions":"308"},{"ruleId":"255","severity":1,"message":"309","line":60,"column":8,"nodeType":"257","endLine":60,"endColumn":14,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":34,"column":9,"nodeType":"260","messageId":"313","endLine":34,"endColumn":20},{"ruleId":"255","severity":1,"message":"314","line":46,"column":6,"nodeType":"257","endLine":46,"endColumn":18,"suggestions":"315"},{"ruleId":"255","severity":1,"message":"316","line":37,"column":8,"nodeType":"257","endLine":37,"endColumn":20,"suggestions":"317"},{"ruleId":"255","severity":1,"message":"318","line":86,"column":8,"nodeType":"257","endLine":86,"endColumn":10,"suggestions":"319"},"no-native-reassign",["320"],"no-negated-in-lhs",["321"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPageInfo'. Either include it or remove the dependency array.","ArrayExpression",["322"],"React Hook useEffect has a missing dependency: 'updateSize'. Either include it or remove the dependency array.","Identifier",["323"],["324"],["325"],"React Hook useEffect has missing dependencies: 'isQuick' and 'setPageInfo'. Either include them or remove the dependency array.",["326"],["327"],"React Hook useEffect has missing dependencies: 'delay' and 'repetitions'. Either include them or remove the dependency array.",["328"],"React Hook useEffect has missing dependencies: 'handlePeekABoo' and 'setPageInfo'. Either include them or remove the dependency array.",["329"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.",["330"],["320"],["321"],"React Hook useEffect has missing dependencies: 'handleTopicWidths', 'mediaPath', and 'updateSize'. Either include them or remove the dependency array.",["331"],"React Hook useEffect has missing dependencies: 'app' and 'handleTopicWidths'. Either include them or remove the dependency array.",["332"],["333"],"React Hook useEffect has missing dependencies: 'appID' and 'setPageInfo'. Either include them or remove the dependency array.",["334"],"React Hook useEffect has missing dependencies: 'callback' and 'wait'. Either include them or remove the dependency array.",["335"],"React Hook useEffect has missing dependencies: 'delay' and 'text.length'. Either include them or remove the dependency array.",["336"],"React Hook useEffect has missing dependencies: 'wordDelay' and 'words.length'. Either include them or remove the dependency array.",["337"],["320"],["321"],["320"],["321"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'item.animationName', 'item.loop', and 'path'. Either include them or remove the dependency array.",["338"],["320"],["321"],"React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.",["339"],["340"],"React Hook useEffect has a missing dependency: 'setCurrentRef'. Either include it or remove the dependency array.",["341"],"React Hook useEffect has missing dependencies: 'elementSizeProperty', 'items', and 'percentage'. Either include them or remove the dependency array.",["342"],"React Hook useEffect has missing dependencies: 'timeout', 'triggerAtStart', and 'verify'. Either include them or remove the dependency array.",["343"],"React Hook useEffect has missing dependencies: 'items.length' and 'verify'. Either include them or remove the dependency array.",["344"],"no-unused-vars","'handleTouch' is assigned a value but never used.","unusedVar","React Hook useEffect has a missing dependency: 'scrolling'. Either include it or remove the dependency array.",["345"],"React Hook useEffect has a missing dependency: 'handleGridRows'. Either include it or remove the dependency array.",["346"],"React Hook useEffect has missing dependencies: 'handleTouchEnd', 'handleWheel', 'lastAppIndex', 'pageInfo.quick', and 'setLastAppIndex'. Either include them or remove the dependency array.",["347"],"no-global-assign","no-unsafe-negation",{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"348","fix":"352"},{"desc":"348","fix":"353"},{"desc":"354","fix":"355"},{"desc":"350","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"350","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"350","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},"Update the dependencies array to be: [setPageInfo]",{"range":"395","text":"396"},"Update the dependencies array to be: [updateSize]",{"range":"397","text":"398"},{"range":"399","text":"396"},{"range":"400","text":"396"},"Update the dependencies array to be: [isQuick, setPageInfo]",{"range":"401","text":"402"},{"range":"403","text":"398"},"Update the dependencies array to be: [delay, repetitions]",{"range":"404","text":"405"},"Update the dependencies array to be: [handlePeekABoo, setPageInfo]",{"range":"406","text":"407"},"Update the dependencies array to be: [handleResize]",{"range":"408","text":"409"},"Update the dependencies array to be: [app, handleTopicWidths, mediaPath, updateSize]",{"range":"410","text":"411"},"Update the dependencies array to be: [app, handleTopicWidths, windowSize]",{"range":"412","text":"413"},{"range":"414","text":"398"},"Update the dependencies array to be: [appID, setPageInfo]",{"range":"415","text":"416"},"Update the dependencies array to be: [callback, wait]",{"range":"417","text":"418"},"Update the dependencies array to be: [delay, text.length]",{"range":"419","text":"420"},"Update the dependencies array to be: [currentIndex, wordDelay, words.length]",{"range":"421","text":"422"},"Update the dependencies array to be: [item.animationName, item.loop, path]",{"range":"423","text":"424"},"Update the dependencies array to be: [path]",{"range":"425","text":"426"},{"range":"427","text":"398"},"Update the dependencies array to be: [setCurrentRef]",{"range":"428","text":"429"},"Update the dependencies array to be: [elementSizeProperty, items, percentage, windowSize]",{"range":"430","text":"431"},"Update the dependencies array to be: [timeout, triggerAtStart, verify]",{"range":"432","text":"433"},"Update the dependencies array to be: [items.length, seen, verify]",{"range":"434","text":"435"},"Update the dependencies array to be: [currentRef, scrolling]",{"range":"436","text":"437"},"Update the dependencies array to be: [handleGridRows, windowSize]",{"range":"438","text":"439"},"Update the dependencies array to be: [handleTouchEnd, handleWheel, lastAppIndex, pageInfo.quick, setLastAppIndex]",{"range":"440","text":"441"},[694,696],"[setPageInfo]",[727,738],"[updateSize]",[830,832],[1083,1085],[1284,1286],"[isQuick, setPageInfo]",[1317,1330],[506,508],"[delay, repetitions]",[2951,2953],"[handlePeekABoo, setPageInfo]",[739,741],"[handleResize]",[4243,4248],"[app, handleTopicWidths, mediaPath, updateSize]",[4306,4318],"[app, handleTopicWidths, windowSize]",[4349,4362],[4737,4739],"[appID, setPageInfo]",[328,330],"[callback, wait]",[464,466],"[delay, text.length]",[675,689],"[currentIndex, wordDelay, words.length]",[751,753],"[item.animationName, item.loop, path]",[1050,1052],"[path]",[1083,1094],[459,461],"[setCurrentRef]",[1708,1720],"[elementSizeProperty, items, percentage, windowSize]",[2050,2052],"[timeout, triggerAtStart, verify]",[2197,2203],"[items.length, seen, verify]",[1354,1366],"[currentRef, scrolling]",[1572,1584],"[handleGridRows, windowSize]",[2805,2807],"[handleTouchEnd, handleWheel, lastAppIndex, pageInfo.quick, setLastAppIndex]"]